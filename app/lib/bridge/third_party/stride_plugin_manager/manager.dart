// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: require_trailing_commas
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: avoid_dynamic_calls
// ignore_for_file: avoid_equals_and_hash_code_on_mutable_classes
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: inference_failure_on_instance_creation

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:stride/bridge/frb_generated.dart';
import 'package:stride/bridge/third_party/stride_core/event.dart';
import 'package:stride/bridge/third_party/stride_core/task.dart';
import 'package:stride/bridge/third_party/stride_core/task/annotation.dart';
import 'package:stride/bridge/third_party/stride_plugin_manager/manifest.dart';
import 'package:uuid/uuid.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`
// These functions are ignored (category: IgnoreBecauseExplicitAttribute): `list`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<PluginManager>>
abstract class PluginManager implements RustOpaqueInterface {
  static Future<PluginManager> default_() =>
      RustLib.instance.api.stridePluginManagerManagerPluginManagerDefault();

  Future<bool> disable({required String pluginName, String? reason});

  Future<void> load();

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<PluginManager> newInstance({required String pluginsPath}) =>
      RustLib.instance.api
          .stridePluginManagerManagerPluginManagerNew(pluginsPath: pluginsPath);

  Future<PluginAction?> processEvent();

  Future<bool> remove({required String pluginName});
}
